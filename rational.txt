Jake Swain

In order to identify the code I would create I interviewed my math teacher, Mr. Foil, in order to find a program that could automate advanced mathematical procedures. After going through a few ideas we decided that a code automating calculations relating to vectors on a three-dimensional plane would be useful. After decided on the topic of vectors in a three-dimensional space, we narrowed it down to the idea of creating a code that would determine the path of an orthogonal intersecting vector based off of the magnitude and direction of another vector. The client (Mr. Foil) expressed a real-life use for this code, such as calculating the path of an intersecting missile.
The reason for choosing the proposed product was that it was a perfect way to incorporate Mr. Foil’s interest, mathematics, with computer science. My rationale for programming a system based on vector-based math was because doing it by hand is a pain, and when done correctly it has multiple interesting applications. The advantage of having a computer program doing vector-based math, rather than a human, is that the human visualization factor (which can lead to mistakes) is eliminated because the code reduces the method to just pure linear algebra. Due to the annoyance involved with solving vector problems, it is justifiable that this code, or one like it, would easily better a mathematician’s life. While this code is useful it does have it’s limitations.
The largest issue with the code is that for some random values for the vertical launch angle returned extremely large values. This can most likely be attributed to the program misidentifying which acute angle to use when calculating the vertical launch angle. Another limitation is that the built-in trigonometry functions are not consistent when applied to three-dimensional situations. For larger vector inputs this occasional caused impossibly large angles to be returned. Despite these setbacks, I would consider this code to be a success. Considering that it is only a prototype, the logic of the code makes mathematical sense and provides a correct answer the majority of the time.
